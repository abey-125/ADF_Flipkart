{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "az-datafactory-101"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase3'"
		},
		"AzureSqlDatabase4_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase4'"
		},
		"SqlServer1_onprem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1_onprem'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "az-abey-sql-server.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "az-database02"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "abey125"
		},
		"AzureSqlDatabase2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "az-abey-sql-server.database.windows.net"
		},
		"AzureSqlDatabase2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "database01"
		},
		"AzureSqlDatabase2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "abey125"
		},
		"AzureSqlDatabase3_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "az-abey-sql-server.database.windows.net"
		},
		"AzureSqlDatabase3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Flipkart_Database"
		},
		"AzureSqlDatabase3_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "abey125"
		},
		"AzureSqlDatabase4_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "az-abey-sql-server.database.windows.net"
		},
		"AzureSqlDatabase4_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Flipkart_Database"
		},
		"AzureSqlDatabase4_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "abey125"
		},
		"SqlServer1_onprem_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "MSI"
		},
		"SqlServer1_onprem_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2022"
		},
		"SqlServer1_onprem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase3_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase3_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase3_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase3_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase4_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase4_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase4_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase4_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "self hosted IR to connect to SSMS",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flipkart"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "uniq_id",
						"type": "nvarchar"
					},
					{
						"name": "product_url",
						"type": "nvarchar"
					},
					{
						"name": "product_name",
						"type": "nvarchar"
					},
					{
						"name": "pid",
						"type": "nvarchar"
					},
					{
						"name": "image",
						"type": "nvarchar"
					},
					{
						"name": "is_FK_Advantage_product",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Sub Category",
						"type": "nvarchar"
					},
					{
						"name": "Sub Sub Category",
						"type": "nvarchar"
					},
					{
						"name": "Retail Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Discounted Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product Rating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Overall Rating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flipkart"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "uniq_id",
						"type": "nvarchar"
					},
					{
						"name": "product_url",
						"type": "nvarchar"
					},
					{
						"name": "product_name",
						"type": "nvarchar"
					},
					{
						"name": "pid",
						"type": "nvarchar"
					},
					{
						"name": "image",
						"type": "nvarchar"
					},
					{
						"name": "is_FK_Advantage_product",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Sub Category",
						"type": "nvarchar"
					},
					{
						"name": "Sub Sub Category",
						"type": "nvarchar"
					},
					{
						"name": "Retail Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Discounted Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product Rating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Overall Rating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "crawl_timestamp",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flipkart"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flipkart_fact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Datetime"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "table_names.csv",
						"container": "filenames"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "destination",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "flipkart_Data.xlsx",
						"folderPath": "input_file",
						"container": "e-commerce-data"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "uniq_id",
						"type": "String"
					},
					{
						"name": "crawl_timestamp",
						"type": "String"
					},
					{
						"name": "product_url",
						"type": "String"
					},
					{
						"name": "product_name",
						"type": "String"
					},
					{
						"name": "product_category_tree",
						"type": "String"
					},
					{
						"name": "pid",
						"type": "String"
					},
					{
						"name": "retail_price",
						"type": "String"
					},
					{
						"name": "discounted_price",
						"type": "String"
					},
					{
						"name": "image",
						"type": "String"
					},
					{
						"name": "is_FK_Advantage_product",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "product_rating",
						"type": "String"
					},
					{
						"name": "overall_rating",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "product_specifications",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1_onprem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_onprem_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_onprem_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_onprem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_onprem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1_onprem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "Department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1_onprem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          uniq_id as string,",
						"          crawl_timestamp as string,",
						"          product_url as string,",
						"          product_name as string,",
						"          product_category_tree as string,",
						"          pid as string,",
						"          retail_price as string,",
						"          discounted_price as string,",
						"          image as string,",
						"          is_FK_Advantage_product as string,",
						"          description as string,",
						"          product_rating as string,",
						"          overall_rating as string,",
						"          brand as string,",
						"          product_specifications as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(Category = iifNull(replace((split(product_category_tree,\">>\")[1]),\"[\\\"\",\"\"),\"None\"),",
						"          {Sub Category} = iifNull(replace(split(product_category_tree,\">>\")[2],\"\\\"]\",\"\"),\"None\"),",
						"          {Sub Sub Category} = iifNull(replace(split(product_category_tree,\">>\")[3],\"\\\"]\",\"\"),\"None\"),",
						"          crawl_timestamp = toTimestamp(crawl_timestamp),",
						"          {Retail Price} = toInteger(retail_price),",
						"          {Discounted Price} = toInteger(discounted_price),",
						"          {Product Rating} = iif(product_rating==\"No rating available\",0,toInteger(product_rating)),",
						"          {Overall Rating} = iif(overall_rating==\"No rating available\",0,toInteger(overall_rating)),",
						"          Brand = iifNull(brand,\"None\"),",
						"          UniqId = concat(\r",
						"    substring(uniq_id, 1, 8), '-',\r",
						"    substring(uniq_id, 9, 4), '-',\r",
						"    substring(uniq_id, 13, 4), '-',\r",
						"    substring(uniq_id, 17, 4), '-',\r",
						"    substring(uniq_id, 21, 12)\r",
						"),",
						"          loaded_time = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          uniq_id = UniqId,",
						"          product_url,",
						"          product_name,",
						"          pid,",
						"          image,",
						"          is_FK_Advantage_product,",
						"          description,",
						"          Category,",
						"          {Sub Category},",
						"          {Sub Sub Category},",
						"          {Retail Price},",
						"          {Discounted Price},",
						"          {Product Rating},",
						"          {Overall Rating},",
						"          Brand = derivedColumn1@Brand,",
						"          crawl_timestamp,",
						"          loaded_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		}
	]
}